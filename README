CSHATAG(1)                       User Commands                      CSHATAG(1)

NAME
       cshatag - shatag in C

SYNOPSIS
       cshatag [-h] [-n] [-q] [-v] [-V] FILE [FILE...]

DESCRIPTION
       cshatag is a minimal re-implementation in C of shatag
       (  https://bitbucket.org/maugier/shatag  written  in  python  by Maxime
       Augier )

       cshatag is a tool to detect silent data corruption. It writes the mtime
       and  the  checksum  of  a file into the file's extended attributes. The
       filesystem needs to be mounted with  user_xattr  enabled  for  this  to
       work.  When  run  again,  it  compares stored mtime and checksum. If it
       finds that the mtime is unchanged but the checksum has changed, it will
       print a warning message.

       File statuses are:
            backdated   checksum is wrong and mtime is older than the sha tag
            corrupt     checksum is wrong and mtime matches the sha tag
            invalid     sha tag attributes are corrupt
            new         sha tag attributes have not been set
            ok          checksum is correct
            outdated    checksum is wrong and mtime is newer than the sha tag
                        (the file has been updated since the last run)

       cshatag  aims  to  be  format-compatible  with shatag and uses the same
       extended attributes (see the COMPATIBILITY section).

OPTIONS
       -c, --check
              Check the hashes on all specified files.

       -f, --force
              Update the stored hashes for backdated,  corrupted,  or  invalid
              files.

       -h, --help
              Output a usage message and exit.

       -n, --dry-run
              Don't update any stored attributes.

       -q, --quiet
              Only  print errors including checksum failures. Can be specified
              multiple times to print even fewer messages. This is  the  oppo‐
              site of --verbose.

       -v, --verbose
              Print  more verbose messages error and warnings messages. Can be
              specified multiple times to print even more  messages.  This  is
              the opposite of --quiet.

       -V, --version
              Output version information about cshatag and exit.

       --md5  Use the MD5 hash algorithm (deprecated, not recommended).

       --sha1 Use the SHA1 hash algorithm (deprecated, not recommended).

       --sha256
              Use the SHA256 hash algorithm (default, used by shatag).

       --sha512
              Use  the  SHA512  hash  algorithm (recommended on 64-bit systems
              which don't require shatag compatibility).

       --blake2s256
              Use the Blake2s hash algorithm.

       --blake2b512
              Use the Blake2b hash algorithm.

EXAMPLES
       Typically, cshatag will be called from find:
       # find / -xdev -type f -exec cshatag {} \; > cshatag.log
       Errors like corrupt files will then be printed to stderr  or  grep  for
       "corrupt" in cshatag.log.

       To remove the extended attributes from all files:
       #  find  /  -xdev  -type f -exec setfattr -x user.shatag.ts {} \; -exec
       setfattr -x user.shatag.sha256 {} ;

RETURN VALUE
       0 Success
       1 Wrong number of arguments
       2 File could not be opened
       3 File is not a regular file
       4 Extended attributs could not be written to file
       5 File is corrupt

COMPATIBILITY
       cshatag writes the user.shatag.ts field with  full  integer  nanosecond
       precision, while python uses a double for the whole mtime and loses the
       last few digits.

AUTHOR
       Written by Jakob Unterwurzacher, and Tim Schlueter.

COPYRIGHT
       Copyright © 2012 Jakob Unterwurzacher.
       Copyright © 2018 Tim Schlueter.

       License     GPLv2+:     GNU     GPL     version     2     or      later
       <https://www.gnu.org/licenses/licenses.html>.

       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       shatag(1), sha256sum(1), getfattr(1), setfattr(1)

cshatag 0.1                       August 2018                       CSHATAG(1)
